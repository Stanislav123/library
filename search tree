
struct Node {  
  int value;  
  const Node* left = nullptr;  
  const Node* right = nullptr;
  Node(int value, Node* left, Node* right) : value(value), left(left), right(right) {}
};  

 
//template <typename T>
bool Solution(const Node* node, const int* min , const int* max ) {    
    if (node == nullptr){
        return true;    
    }     
    if ( max == nullptr && min == nullptr ) {
        if (!Solution(node->left, max, &(node->value)) 
            || !Solution(node->right, &(node->value), min)) {
           return false;
        }
    } else if ( max && node->value < *max ) {
        if (min && node->value <= *min){
            return false;
        }
        if(!Solution(node->right,  &(node->value), max )) {
           return false;
        }      
        if(!Solution(node->left, min, &(node->value))) { 
            return false;
        }  
    } else if ( min && node->value > *min ) {
        if (max && node->value >= *max){
            return false;
        }
        if(!Solution(node->right,  &(node->value), max)) {
           return false;
        } 
        if(!Solution(node->left, min, &(node->value))) { 
            return false;
        } 
    } else {
        return false;
    }
    return true;
    
} 

//template <typename T>
bool Solution(const Node* node) {
    return Solution(node, nullptr, nullptr);
    
}
